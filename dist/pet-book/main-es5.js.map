{"version":3,"sources":["webpack:///$_lazy_route_resource lazy namespace object","webpack:///src/app/app-routing.module.ts","webpack:///src/app/app.component.ts","webpack:///src/app/app.component.html","webpack:///src/app/app.module.ts","webpack:///src/app/filterimages.pipe.ts","webpack:///src/app/image-description/image-description.component.ts","webpack:///src/app/image-description/image-description.component.html","webpack:///src/app/image-details/image-details.component.ts","webpack:///src/app/image-details/image-details.component.html","webpack:///src/app/image-gallery/image-gallery.component.ts","webpack:///src/app/image-gallery/image-gallery.component.html","webpack:///src/app/image.service.ts","webpack:///src/environments/environment.ts","webpack:///src/main.ts"],"names":["webpackEmptyAsyncContext","req","Promise","resolve","then","e","Error","code","keys","module","exports","id","routes","path","component","AppRoutingModule","forRoot","imports","AppComponent","title","selector","templateUrl","styleUrls","AppModule","declarations","providers","bootstrap","FilterimagesPipe","items","laptop","filter","item","brand","name","ImageDescriptionComponent","ImageDetailComponent","imageService","route","image","getImage","snapshot","params","GalleryComponent","filterBy","allImages","getImages","ImageService","Imagesdelatils","slice","find","Images","environment","production","bootstrapModule","err","console","error"],"mappings":"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","file":"main-es5.js","sourcesContent":["function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"./$$_lazy_route_resource lazy recursive\";","import { NgModule } from '@angular/core';\r\nimport { Routes, RouterModule } from '@angular/router';\r\nimport { GalleryComponent } from './image-gallery/image-gallery.component';\r\nimport { ImageDetailComponent } from './image-details/image-details.component';\r\n\r\n\r\nconst routes: Routes = [\r\n  { path: '', component: GalleryComponent },\r\n  { path: 'image/:id', component: ImageDetailComponent },\r\n];\r\n\r\n@NgModule({\r\n  imports: [RouterModule.forRoot(routes)],\r\n  exports: [RouterModule]\r\n})\r\nexport class AppRoutingModule { }\r\n","import { Component } from '@angular/core';\r\n\r\n@Component({\r\n  selector: 'app-root',\r\n  templateUrl: './app.component.html',\r\n  styleUrls: ['./app.component.scss']\r\n})\r\nexport class AppComponent {\r\n  title = 'pet-book';\r\n}\r\n","<div>    \r\n  <router-outlet></router-outlet>    \r\n</div> ","import { BrowserModule } from '@angular/platform-browser';\r\nimport { NgModule } from '@angular/core';\r\nimport { FormsModule } from '@angular/forms';\r\n//import {NgbModule} from '@ng-bootstrap/ng-bootstrap';\r\n\r\nimport { AppRoutingModule } from './app-routing.module';\r\nimport { AppComponent } from './app.component';\r\nimport { GalleryComponent } from './image-gallery/image-gallery.component';\r\nimport { ImageDetailComponent } from './image-details/image-details.component';\r\nimport { FilterimagesPipe } from './filterimages.pipe';\r\nimport { ImageService } from './image.service';\nimport { ImageDescriptionComponent } from './image-description/image-description.component';\r\n\r\n@NgModule({\r\n  declarations: [\r\n    AppComponent,\r\n    GalleryComponent,\r\n    ImageDetailComponent,\r\n    FilterimagesPipe,\r\n    ImageDescriptionComponent\r\n  ],\r\n  imports: [\r\n    BrowserModule,\r\n    FormsModule,\r\n    AppRoutingModule,\r\n    //NgbModule\r\n  ],\r\n  providers: [ImageService, FilterimagesPipe],\r\n  bootstrap: [AppComponent]\r\n})\r\nexport class AppModule { }\r\n","import { Pipe, PipeTransform } from '@angular/core';    \r\n    \r\n@Pipe({    \r\n  name: 'filterimages'    \r\n})    \r\nexport class FilterimagesPipe implements PipeTransform {    \r\n  transform(items: any[], laptop: string): any {    \r\n    if(laptop === 'all'){ return items } else    \r\n    return items.filter(item =>{    \r\n      return item.brand === laptop;    \r\n    });    \r\n  }    \r\n    \r\n} ","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-image-description',\n  templateUrl: './image-description.component.html',\n  styleUrls: ['./image-description.component.scss']\n})\nexport class ImageDescriptionComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit(): void {\n  }\n\n}\n","<p>image-description works!</p>\n","import { Component } from '@angular/core';    \r\nimport { ImageService } from '../image.service';    \r\nimport { ActivatedRoute } from '@angular/router'    \r\n    \r\n@Component({    \r\n  templateUrl: './image-details.component.html',    \r\n  styleUrls: ['./image-details.component.css']    \r\n})    \r\nexport class ImageDetailComponent {    \r\n  image:any    \r\n    \r\n  constructor(private imageService: ImageService,    \r\n    private route: ActivatedRoute) { }    \r\n    \r\n  ngOnInit(){    \r\n    this.image = this.imageService.getImage(    \r\n      this.route.snapshot.params['id']    \r\n    )    \r\n  }    \r\n}","<div class=\"row\">  \r\n    <div class=col-md-12>  \r\n      <div [ngStyle]=\"{'background-image':'url('+ image.url +')'}\" class=\"img-container\">  \r\n      </div>  \r\n    </div>  \r\n  </div>  ","import { Component, OnInit, Input, OnChanges } from '@angular/core';    \r\nimport { ImageService } from '../image.service';    \r\n    \r\n@Component({    \r\n  selector: 'app-imagegallery',    \r\n  templateUrl: './image-gallery.component.html',    \r\n  styleUrls: ['./image-gallery.component.css']    \r\n})    \r\n    \r\nexport class GalleryComponent implements OnChanges {    \r\n  images:any[];    \r\n  filterBy?: string = 'all'    \r\n  allImages:any[] = [];    \r\n    \r\n  constructor(private imageService: ImageService) {    \r\n    this.allImages = this.imageService.getImages();    \r\n  }    \r\n  ngOnChanges() {    \r\n    this.allImages = this.imageService.getImages();    \r\n  }    \r\n}   ","<div>    \r\n    <div class=\"row\">    \r\n      <div class=\"col-sm-12 btn btn-primary\">    \r\n        Pet Book Prueba Devops\r\n      </div>    \r\n    </div>    \r\n    <div class=\"row\" style=\"margin-top:10px;margin-bottom: 10px;\">    \r\n      <div class=\"col-sm-1\">    \r\n      </div>    \r\n      <div class=\"col-sm-2\">    \r\n        <button class=\"btn btn-success btn-Filtroall\" (click)=\"filterBy='all'\">All</button>    \r\n      </div>    \r\n      <div class=\"col-sm-2\">    \r\n        <button class=\"btn btn-success btn-filtroPerro\" (click)=\"filterBy='perro'\">Perro</button>    \r\n      </div>    \r\n      <div class=\"col-sm-2\">    \r\n        <button class=\"btn btn-success btnFiltroGato\" (click)=\"filterBy='gato'\">Gato</button>    \r\n      </div>    \r\n      <div class=\"col-sm-1\">    \r\n      </div>    \r\n    </div>    \r\n    <div class=\"row\">    \r\n      <ul>    \r\n        <li *ngFor=\"let img of (allImages | filterimages:filterBy)\">    \r\n          <a [routerLink]=\"['/image', img.id]\">    \r\n            <img src=\"{{img.url}}\" class=\"img\" width=\"240\" height=\"170\">    \r\n          </a>    \r\n        </li>    \r\n      </ul>    \r\n    </div>    \r\n  </div>","import { Injectable } from '@angular/core'    \r\n@Injectable()    \r\nexport class ImageService {    \r\n    allImages = [];    \r\n    \r\n    getImages() {    \r\n        return this.allImages = Imagesdelatils.slice(0);    \r\n    }    \r\n    \r\n    getImage(id: number) {    \r\n        return Imagesdelatils.slice(0).find(Images => Images.id == id)    \r\n    }    \r\n}    \r\nconst Imagesdelatils = [    \r\n    { \"id\": 1, \"brand\": \"perro\", \"url\": \"assets/images/perro1.jpg\" },    \r\n    { \"id\": 2, \"brand\": \"perro\", \"url\": \"assets/images/perro2.jpg\" },\r\n    { \"id\": 3, \"brand\": \"gato\", \"url\": \"assets/images/gato1.jpg\" },\r\n    { \"id\": 4, \"brand\": \"gato\", \"url\": \"assets/images/gato2.jpeg\" },\r\n    { \"id\": 5, \"brand\": \"perro\", \"url\": \"assets/images/perro3.jpg\" },\r\n]  ","// This file can be replaced during build by using the `fileReplacements` array.\r\n// `ng build --prod` replaces `environment.ts` with `environment.prod.ts`.\r\n// The list of file replacements can be found in `angular.json`.\r\n\r\nexport const environment = {\r\n  production: false\r\n};\r\n\r\n/*\r\n * For easier debugging in development mode, you can import the following file\r\n * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\r\n *\r\n * This import should be commented out in production mode because it will have a negative impact\r\n * on performance if an error is thrown.\r\n */\r\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\r\n","import { enableProdMode } from '@angular/core';\r\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\r\n\r\nimport { AppModule } from './app/app.module';\r\nimport { environment } from './environments/environment';\r\n\r\nif (environment.production) {\r\n  enableProdMode();\r\n}\r\n\r\nplatformBrowserDynamic().bootstrapModule(AppModule)\r\n  .catch(err => console.error(err));\r\n"]}